version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: app-frontend
    command: npm start
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5174:5173"
    depends_on:
      - backend
    networks:
      - cinephoria-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: app-backend
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5001:5000"
    depends_on:
      - mysql-db
      - mongodb-db
    env_file:
      - .env.docker.test
    networks:
      - cinephoria-network
    command: sh -c "until nc -z mysql-db 3306; do echo 'Waiting for MySQL...'; sleep 1; done; echo 'MySQL is up - running Prisma migrate and generate'; npx prisma migrate deploy; npx prisma generate; npm run backend:docker:test"

  mysql-db:
    image: mysql:5.7
    restart: always
    env_file:
      - .env.docker.test
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - cinephoria-network

  mongodb-db:
    image: mongo:latest
    restart: always
    env_file:
      - .env.docker.test
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - cinephoria-network

networks:
  cinephoria-network:
    driver: bridge

volumes:
  mysql-data:
  mongo-data:
